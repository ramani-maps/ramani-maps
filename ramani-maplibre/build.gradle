buildscript {
    ext {
        kotlin_version = "1.9.22"
        hilt_version = '2.44'
        compose_ui_version = '1.6.0'
    }

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

// Load file "keystore.properties" where we keep our keys
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()

try {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} catch (IOException ignored) {
    if (project.hasProperty('ossrhUsername')) keystoreProperties['ossrhUsername'] = ossrhUsername
    if (project.hasProperty('ossrhPassword')) keystoreProperties['ossrhPassword'] = ossrhPassword
}

allprojects {
    apply plugin: 'com.android.library'
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-kapt'
    apply plugin: 'kotlin-parcelize'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    repositories {
        google()
        mavenCentral()
    }

    android {
        namespace 'org.ramani.compose'
        compileSdk 34

        defaultConfig {
            minSdkVersion 25
            targetSdkVersion 34

            group = 'org.ramani-maps'
            versionCode 4
            version "0.3.0"
        }

        buildTypes {
            release {
                minifyEnabled false
            }
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_17
            targetCompatibility JavaVersion.VERSION_17
        }
        kotlinOptions {
            jvmTarget = '17'
        }
        buildFeatures {
            compose true
        }
        composeOptions {
            kotlinCompilerExtensionVersion '1.5.8'
        }

        testOptions {
            unitTests.all {
                testLogging {
                    outputs.upToDateWhen { false }
                    events "passed", "failed", "skipped", "standardError"
                    showCauses true
                    showExceptions true
                }
            }
        }
    }

    dependencies {
        implementation "androidx.compose.foundation:foundation:$compose_ui_version"
        implementation "androidx.compose.material:material:$compose_ui_version"
        implementation "androidx.compose.ui:ui:$compose_ui_version"
        implementation 'androidx.core:core-ktx:1.13.1'
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'

        api 'org.maplibre.gl:android-sdk:11.0.0'
        api 'org.maplibre.gl:android-plugin-annotation-v9:3.0.0'

        testImplementation 'junit:junit:4.13.2'
    }

    if (keystoreProperties.containsKey("ossrhUsername") && keystoreProperties.containsKey("ossrhPassword")) {
        afterEvaluate {
            publishing {
                publications {
                    release(MavenPublication) {
                        from components.release

                        pom {
                            name = 'Ramani-Maplibre'
                            packaging = 'aar'
                            description = 'An Android Compose library to manipulate MapLibre maps.'
                            url = 'https://github.com/ramani-maps/ramani-maps'

                            scm {
                                connection = 'scm:git:https://github.com/ramani-maps/ramani-maps'
                                developerConnection = 'scm:git:https://github.com/ramani-maps/ramani-maps'
                                url = 'https://github.com/ramani-maps/ramani-maps'
                            }

                            licenses {
                                license {
                                    name = 'Mozilla Public License 2.0'
                                    url = 'https://spdx.org/licenses/MPL-2.0.html'
                                }
                            }

                            developers {
                                developer {
                                    id = 'romanbapst'
                                    name = 'Roman Bapst'
                                    email = 'bapstroman@gmail.com'
                                }
                                developer {
                                    id = 'jonasvautherin'
                                    name = 'Jonas Vautherin'
                                    email = 'dev@jonas.vautherin.ch'
                                }
                            }
                        }
                    }
                }
                repositories {
                    maven {
                        url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"

                        credentials {
                            username = keystoreProperties["ossrhUsername"]
                            password = keystoreProperties["ossrhPassword"]
                        }
                    }
                }
            }

            signing {
                useGpgCmd()
                sign publishing.publications.release
            }
        }
    }
}

